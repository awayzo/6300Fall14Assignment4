package edu.gatech.seclass.unitconvertor;

import android.support.v7.app.ActionBarActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.*;
import android.view.Window;

public class DisActivity extends ActionBarActivity {
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_dis);

		getActionBar().setDisplayHomeAsUpEnabled(true);

		final RadioGroup rg = (RadioGroup) findViewById(R.id.radioGroupDistance);
		
		rg.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {

	            @Override
	            public void onCheckedChanged(RadioGroup group, int checkedId) 
	            {
	                RadioButton checkedRadioButton = (RadioButton) findViewById(checkedId);
	                String radioText =(String) checkedRadioButton.getText();
	                
	               if(radioText == radioText){
	            	   
	            	   milesToKm(1);
	            	   Toast.makeText(getApplicationContext(), radioText, Toast.LENGTH_SHORT).show();
	               }
	                
	            }
	        });
		
		
		
		Button  btnConvert = (Button) findViewById(R.id.btnConvert);
		//===============================================================
		// ======btnConvert Listener===================
		
		
		
		
		btnConvert.setOnClickListener(new View.OnClickListener() {
		
			
			
			RadioButton selectedButton =(RadioButton) findViewById(rg.getCheckedRadioButtonId());
					
					@Override
					public void onClick(View v) {
					
//					switch (selectedButton.getId()) {
//					case 0:
//						Toast.makeText(DisActivity.this, selectedButton.getId(), Toast.LENGTH_LONG).show();
//						
//						break;
//					case 1:
//						Toast.makeText(DisActivity.this, selectedButton.getId(), Toast.LENGTH_LONG).show();
//						
//						break;
//
//					default:
//						break;
//					}
					
					
					
					}
				});

		
		
		//===============================================================
		

		
		
		
		
		
		
	}

	
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.dis, menu);
	//	MenuItem item = menu.add(R.string.convert_currency);
	
		//Create an event listener to add functionality to 
//		item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
//			
//			@Override
//			public boolean onMenuItemClick(MenuItem item) {
//				Intent intent = new Intent(DisActivity.this, CurrencyActivity.class);
//				startActivity(intent);
//				return false;
//			}
//		});
		 Window w = getWindow();
		 w.setTitle("Convert Distance");
		return super.onCreateOptionsMenu(menu);
	}
	
	
	
	

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.

		Intent intent =null;
		//Handle action bar selection	
		//This allows me to replace three event handlers for one, reducing the code.
		switch (item.getItemId()) {
		case R.id.action_convert_area:
			 intent = new Intent(DisActivity.this, AreaActivity.class);
			startActivity(intent);
			break;
		case R.id.action_convert_distance:
			intent = new Intent(DisActivity.this, DisActivity.class);
			startActivity(intent);
		break;
		case R.id.action_convert_currency:
			 intent = new Intent(DisActivity.this, CurrencyActivity.class);
			startActivity(intent);
		break;
		case R.id.action_settings:
			Toast.makeText(this,item.getTitle() + ": is not currently active", Toast.LENGTH_LONG).show();
			
		break;
		case android.R.id.home:
			finish();
			
		break;

		default:
			break;
		}
		
		
	

		return super.onOptionsItemSelected(item);
	}


	
	 public void handleClick(View view) {
	 // dynamically changing header with getWindow

	 // See which Radio Button is clicked
	 boolean checked = ((RadioButton) view).isChecked();
	 
	

	//Get the text value from the text field
	 EditText value = (EditText) findViewById(R.id.txtValue);
	//Convert the string to a double
	 double distance = Double.parseDouble(value.getText().toString());
	 
	
	
	
	 switch (view.getId()) {
	 case R.id.radioGroupArea:
	 if (checked)
	//on btn click
		 
	 value.setText(kmToMiles(distance));
	 break;
	 case R.id.radioGroupCurrency:
	 if (checked)
	 
	 value.setText(milesToKm(distance));
	 break;
	 }
	 }
	 
	 
	 
	 public String milesToKm(double miles) {
		//Get distance in Kilometers
			double km = miles * 1.61;
			if (miles != 0) {

				return String.valueOf(km);

			} else {
				miles = 0;
				return String.valueOf(km);
			}

		}

		public String kmToMiles(double km) {
			//Get distance in Miles
			double miles = km / 1.608;
			if (km != 0) {
				return String.valueOf(miles);

			} else {
				km = 0;
				return String.valueOf(miles);
			}

		}
}
